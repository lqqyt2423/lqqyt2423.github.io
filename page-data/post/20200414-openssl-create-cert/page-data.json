{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/20200414-openssl-create-cert/","result":{"data":{"site":{"siteMetadata":{"title":"lqqyt2423's blog"}},"markdownRemark":{"id":"40112c46-bfa5-502a-b7ed-1b3b6867089d","excerpt":"1、生成密钥 2、创建证书请求（ create a Certificate Signing Request (CSR) file） 此时需要填写一些信息， 需要填写对应的域名。 如果域名与最终访问域名不同，则会出错：证书名称与输入不匹配…","html":"<p>1、生成密钥</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">openssl genrsa -out key.pem 2048</code></pre></div>\n<p>2、创建证书请求（ create a <em>Certificate Signing Request</em> (CSR) file）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">openssl req -new -sha256 -key key.pem -out csr.pem</code></pre></div>\n<p>此时需要填写一些信息，<code class=\"language-text\">Common Name</code> 需要填写对应的域名。</p>\n<blockquote>\n<p>如果域名与最终访问域名不同，则会出错：证书名称与输入不匹配</p>\n</blockquote>\n<p>3、用 <code class=\"language-text\">rootCA.crt</code> 和 <code class=\"language-text\">rootCA.key</code> 签发证书（根证书需额外生成）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">openssl x509 -req -days 360 -in csr.pem -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out cert.pem -sha256 -extfile http.ext</code></pre></div>\n<p><code class=\"language-text\">http.ext</code> 文件内容如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">keyUsage = nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage = serverAuth, clientAuth\nsubjectAltName=@SubjectAlternativeName\n\n[ SubjectAlternativeName ]\nDNS.1=localhost</code></pre></div>\n<p><code class=\"language-text\">SubjectAlternativeName</code> 中的域名需与 <code class=\"language-text\">Common Name</code> 一致。</p>\n<blockquote>\n<p>为什么需要 <code class=\"language-text\">-extfile http.ext</code> 呢？因为此可以解决 <code class=\"language-text\">Chrome</code> 中的错误：</p>\n<p>NET::ERR<em>CERT</em>COMMON<em>NAME</em>INVALID</p>\n<p>此服务器无法证实它就是 <strong>localhost</strong> - 它的安全证书没有指定主题备用名称。这可能是因为某项配置有误或某个攻击者拦截了您的连接。</p>\n</blockquote>\n<p>4、通过 <code class=\"language-text\">node.js</code> 代码测试</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> https <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./key.pem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  cert<span class=\"token operator\">:</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./cert.pem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nhttps<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">443</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'server listen at 443'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>运行</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node index.js</code></pre></div>\n<p>浏览器中访问 <code class=\"language-text\">https://localhost/</code> 即可。</p>\n<p>参考网址：</p>\n<ul>\n<li><a href=\"https://nodejs.org/dist/latest-v12.x/docs/api/tls.html#tls_tls_ssl_concepts\">tls</a></li>\n<li><a href=\"https://nodejs.org/dist/latest-v12.x/docs/api/https.html#https_https_createserver_options_requestlistener\">https</a></li>\n<li><a href=\"https://www.cnblogs.com/will-space/p/11913744.html\">解决Chrome中错误相关</a></li>\n</ul>","frontmatter":{"title":"openssl 生成证书的操作","date":"April 13, 2020","description":""}}},"pageContext":{"slug":"/20200414-openssl-create-cert/","previous":{"fields":{"slug":"/20190808-sort-algo/","path":"/post/20190808-sort-algo/"},"frontmatter":{"title":"排序相关算法"}},"next":{"fields":{"slug":"/20200504-mac-app-dynamic-insert/","path":"/post/20200504-mac-app-dynamic-insert/"},"frontmatter":{"title":"mac app 逆向之动态注入"}}}}}