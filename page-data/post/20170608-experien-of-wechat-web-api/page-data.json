{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/20170608-experien-of-wechat-web-api/","result":{"data":{"site":{"siteMetadata":{"title":"lqqyt2423's blog"}},"markdownRemark":{"id":"799b41ed-6c78-5ec0-b8d8-e0a12ffe9483","excerpt":"要想自定义微信分享的标题、图标等，就需要调用微信相应的接口，本文主要介绍微信接口权限的验证及之后的调用接口的过程。 整体思路 首先是微信公众后台配置js 接口安全域名，然后是需要在前端网页中引入js…","html":"<p>要想自定义微信分享的标题、图标等，就需要调用微信相应的接口，本文主要介绍微信接口权限的验证及之后的调用接口的过程。</p>\n<h2>整体思路</h2>\n<p>首先是微信公众后台配置js 接口安全域名，然后是需要在前端网页中引入js 文件：<code class=\"language-text\">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</code> 。</p>\n<p>之后微信文档便提供了权限验证的<code class=\"language-text\">config</code> 接口，也需要之后在前端网页中引用：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">wx<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>\n    appId<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 必填，公众号的唯一标识</span>\n    timestamp<span class=\"token operator\">:</span> <span class=\"token punctuation\">,</span> <span class=\"token comment\">// 必填，生成签名的时间戳</span>\n    nonceStr<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 必填，生成签名的随机串</span>\n    signature<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 必填，签名，见附录1</span>\n    jsApiList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>不过上面的内容是需要在服务器端运行微信提供的特定算法生成，然后再返回至前端网页中的。</p>\n<h2>代码整体逻辑部分</h2>\n<p>所以下面介绍整个验证的逻辑，包括服务器端和前端：</p>\n<ol>\n<li>根据公众号的appId 和appSecret 先从微信服务器获取access_token ，且需要全局缓存，每7200 秒重新获取一次。</li>\n<li>根据access<em>token 从微信服务器获取jsapi</em>ticket ，也需全局缓存在程序变量中，每7200 秒重新获取一次。</li>\n<li>根据jsapi_ticket 和其他的随机字符串、时间戳、url 地址等运行微信提供的算法，生成<strong>signature</strong>。</li>\n<li>此时将时间戳、随机字符串、签名等信息写入上面前端的js 中，然后前端网页引用即可。</li>\n<li>前端网页通过微信自带浏览器打开时，微信肯定会通过我们给出的签名、随机字符串、时间戳等信息自己运行一篇算法，如果结果一致，那接下来就会在<code class=\"language-text\">wx.ready</code> 接口中处理之后逻辑了。如果结果不一致，将会调用<code class=\"language-text\">wx.error</code> 接口。</li>\n<li>验证成功，即可调用微信自带的各种接口如分享、扫一扫等。</li>\n</ol>\n<h2>代码详细分享 - node</h2>\n<p>我后端用的是node 实现的，所以下面介绍下node 的代码。</p>\n<h3>第一步、获取access_token</h3>\n<p>注意appId 和appSecret 需替换成自己公众号的对应字符：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> wxAssToken <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tappId<span class=\"token operator\">:</span> appId<span class=\"token punctuation\">,</span>\n\tappSecret<span class=\"token operator\">:</span> appSecret<span class=\"token punctuation\">,</span>\n\tassToken<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n\ttimeStamp<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">getAssToken</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>assToken <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeStamp <span class=\"token operator\">&lt;</span> <span class=\"token number\">7000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'使用本地缓存的assToken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>assToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'联网获取assToken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> <span class=\"token string\">'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid='</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>appId <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;secret='</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>appSecret<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t\t\thttps<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chunk</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tbody<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tbody <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tthat<span class=\"token punctuation\">.</span>assToken <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>access_token<span class=\"token punctuation\">;</span>\n\t\t\t\t\tthat<span class=\"token punctuation\">.</span>timeStamp <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">cb</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">.</span>assToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>我是直接新建了一个对象，对象中可缓存微信的access<em>token ，然后调用时直接使用此对象的<code class=\"language-text\">getAssToken</code> 方法，在回调函数中的第一个参数即为access</em>token。每7000 秒间隔会重新从微信服务器请求一次。</p>\n<h3>第二步、获取jsapi_ticket</h3>\n<p>和第一步获取access_token 逻辑完全相同，下面代码中引用了生成签名的函数<code class=\"language-text\">sign</code> 放在之后介绍：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> wxJsTic <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tjsTic<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n\ttimeStamp<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tsign<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">getJsTic</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">assToken<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jsTic <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeStamp <span class=\"token operator\">&lt;</span> <span class=\"token number\">7000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'使用本地缓存的sign'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'联网获取sign'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> <span class=\"token string\">'https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token='</span> <span class=\"token operator\">+</span> assToken <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;type=jsapi'</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t\t\thttps<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chunk</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tbody<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tbody <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tthat<span class=\"token punctuation\">.</span>jsTic <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ticket<span class=\"token punctuation\">;</span>\n\t\t\t\t\tthat<span class=\"token punctuation\">.</span>timeStamp <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tthat<span class=\"token punctuation\">.</span>sign <span class=\"token operator\">=</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">.</span>jsTic<span class=\"token punctuation\">,</span> <span class=\"token string\">'https://www.84games.com/jike/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">cb</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>第三步、签名算法部分</h3>\n<p>此部分微信官方已经提供了实例代码，包含php、java、nodejs 及python 的代码，直接访问文档进行下载即可。我是直接引用的微信官方的函数：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> sign <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./sign.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>第四步、网页请求时将<code class=\"language-text\">sign</code> 对象中的参数返回至前端即可</h3>\n<p>首先定义函数<code class=\"language-text\">getSign</code> ，此函数中会调用第一步和第二步的函数，且回调函数的第一个参数即算法生成的<code class=\"language-text\">sign</code> 对象：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getSign</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\twxAssToken<span class=\"token punctuation\">.</span><span class=\"token function\">getAssToken</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">assToken</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\twxJsTic<span class=\"token punctuation\">.</span><span class=\"token function\">getJsTic</span><span class=\"token punctuation\">(</span>assToken<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sign</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cb</span><span class=\"token punctuation\">(</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> getSign<span class=\"token punctuation\">;</span></code></pre></div>\n<p>然后直接在路由函数中返回特定的js 文件至前端即可，下面的<code class=\"language-text\">getWeixinKey</code> 函数即为上面代码所导出的<code class=\"language-text\">getSign</code> 方法，下面是使用express 做服务器端程序，表示请求<code class=\"language-text\">main.js</code> 文件时，会先对此文件替换上面算法生成的部分，然后再返回数据：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> getWeixinKey <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./getWeixinKey'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/main.js'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getWeixinKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sign</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tfs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./main.js.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\n\t\t\tdata <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{{noncestr}}'</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">.</span>nonceStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{{timestamp}}'</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{{signature}}'</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">.</span>signature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>第五步和第六步、前端验证部分</h3>\n<p>前面四部都是在服务器端进行的，第五步和第六步会回到前端网页中：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 验证部分，双大括号中对应的参数会在上面代码中先替换再返回至前端</span>\nwx<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\tdebug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\tappId<span class=\"token operator\">:</span> <span class=\"token string\">'wx175e7902f419b624'</span><span class=\"token punctuation\">,</span>\n\ttimestamp<span class=\"token operator\">:</span> <span class=\"token string\">'{{timestamp}}'</span><span class=\"token punctuation\">,</span>\n\tnonceStr<span class=\"token operator\">:</span> <span class=\"token string\">'{{noncestr}}'</span><span class=\"token punctuation\">,</span>\n\tsignature<span class=\"token operator\">:</span> <span class=\"token string\">'{{signature}}'</span><span class=\"token punctuation\">,</span>\n\tjsApiList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'onMenuShareTimeline'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'onMenuShareAppMessage'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 如果验证成功，则可以调用微信自带接口，本程序调用了分享至朋友圈和分享至好友的接口</span>\nwx<span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ready'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\n\twx<span class=\"token punctuation\">.</span><span class=\"token function\">onMenuShareTimeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t\ttitle<span class=\"token operator\">:</span> <span class=\"token string\">'分享至朋友圈的标题'</span><span class=\"token punctuation\">,</span>\n\t\tlink<span class=\"token operator\">:</span> <span class=\"token string\">'前端网页url地址'</span><span class=\"token punctuation\">,</span>\n\t\timgUrl<span class=\"token operator\">:</span> <span class=\"token string\">'图标地址'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 分享成功后调用此方法</span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'share success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function-variable function\">cancel</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 取消分享调用此方法</span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'share cancel'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\twx<span class=\"token punctuation\">.</span><span class=\"token function\">onMenuShareAppMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t\ttitle<span class=\"token operator\">:</span> <span class=\"token string\">'分享给好友的标题'</span><span class=\"token punctuation\">,</span>\n\t\tdesc<span class=\"token operator\">:</span> <span class=\"token string\">'分享给好友的描述'</span><span class=\"token punctuation\">,</span>\n\t\tlink<span class=\"token operator\">:</span> <span class=\"token string\">'前端网页url地址'</span><span class=\"token punctuation\">,</span>\n\t\timgUrl<span class=\"token operator\">:</span> <span class=\"token string\">'图标地址'</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 验证错误是会打印错误对象，方便查找错误具体信息</span>\nwx<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>参考</h2>\n<p><a href=\"https://mp.weixin.qq.com/wiki\">微信文档</a></p>","frontmatter":{"title":"微信网页开发验证及调用接口经验分享","date":"June 07, 2017","description":""}}},"pageContext":{"slug":"/20170608-experien-of-wechat-web-api/","previous":{"fields":{"slug":"/20170607-record-of-install-graphicsmagick/","path":"/post/20170607-record-of-install-graphicsmagick/"},"frontmatter":{"title":"阿里云Linux服务器安装GraphicsMagick全过程"}},"next":{"fields":{"slug":"/20170610-nginx-notes/","path":"/post/20170610-nginx-notes/"},"frontmatter":{"title":"Nginx 学习笔记"}}}}}