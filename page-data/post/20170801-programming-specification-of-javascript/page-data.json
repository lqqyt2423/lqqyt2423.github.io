{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/20170801-programming-specification-of-javascript/","result":{"data":{"site":{"siteMetadata":{"title":"lqqyt2423's blog"}},"markdownRemark":{"id":"9b3a6437-038c-5f13-a606-db3a3332f93a","excerpt":"后端 接口规范（RESTFUL） 表述性状态转移，资源 常见接口请求Method：Get, Put, Post, Delete, Patch, Option Get（获取数据）, Option（通常用于preflight 预请求） Put（修改数据）, Delete（删除数据）, Patch（修改数据）, Post…","html":"<h3>后端</h3>\n<h5>接口规范（RESTFUL） 表述性状态转移，资源</h5>\n<ol>\n<li>常见接口请求Method：Get, Put, Post, Delete, Patch, Option</li>\n<li>Get（获取数据）, Option（通常用于preflight 预请求）</li>\n<li>Put（修改数据）, Delete（删除数据）, Patch（修改数据）, Post（创建数据）</li>\n<li>接口命名和路由，增删改查</li>\n<li>请求列表：verb: get, path: ‘events’, name: ‘index|list|search’</li>\n<li>请求单个：verb: get, path: ‘events/:id’, name: ‘show’</li>\n<li>创建：verb: post, path: ‘events’, name: ‘create’</li>\n<li>修改：verb: put, path: ‘events/:id’, name: ‘update’</li>\n<li>删除：verb: delete, path: ‘events/:id’, name: ‘destroy’</li>\n<li>其他命名规范</li>\n<li>避免 get，set 开头来命名函数</li>\n<li>路由统一使用下划线</li>\n<li>接口数据规范</li>\n<li>状态类的表述直接作为一个字段随接口返回， 不要添加很多无谓的接口</li>\n<li>永远要检查当前用户是否有权先修改当前数据</li>\n<li>不要出现N+1查询</li>\n<li>数据库规范</li>\n<li>MongoDB 是 schema less，尽可能满足单一接口的所有需求</li>\n<li>embedded documents 只能使用在有限内嵌数据，最多只能容纳16M</li>\n<li>合理使用 index</li>\n<li>把数据操作的复杂逻辑做成通用方法，写在 model 里面</li>\n</ol>\n<h3>前端</h3>\n<h5>页面组织逻辑</h5>\n<ol>\n<li>所有的接口是action</li>\n<li>所有的接口数据都存在 store，尽可能共用数据</li>\n<li>尽量把功能抽象成共用组件，或者某一块功能下的共用组件，也不要过度抽象</li>\n<li>尽量少使用外部的库</li>\n<li>CSS 使用 - 中杠来命名 class，多用class，而不是伪类</li>\n<li>Javascript 命名规范</li>\n<li>常量：<code class=\"language-text\">const NAME = &#39;God&#39;;</code></li>\n<li>ES6 class：<code class=\"language-text\">class MyComponent</code> 驼峰形式，首字母大写</li>\n<li>变量：驼峰，首字母小写， <code class=\"language-text\">var myComponent = new MyComponent()</code></li>\n<li>true ? yes : no</li>\n<li>路由同接口类似</li>\n</ol>","frontmatter":{"title":"JavaScript 编程规范","date":"July 31, 2017","description":""}}},"pageContext":{"slug":"/20170801-programming-specification-of-javascript/","previous":{"fields":{"slug":"/20170801-knowledge-of-netstat-command/","path":"/post/20170801-knowledge-of-netstat-command/"},"frontmatter":{"title":"netstat、pid与端口"}},"next":{"fields":{"slug":"/20170906-how-mongo-dump-data/","path":"/post/20170906-how-mongo-dump-data/"},"frontmatter":{"title":"mongo 命令行导出数据"}}}}}