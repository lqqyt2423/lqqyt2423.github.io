{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/20170610-nginx-notes/","result":{"data":{"site":{"siteMetadata":{"title":"lqqyt2423's blog"}},"markdownRemark":{"id":"940aaf01-c9c9-5839-8594-255e022723b6","excerpt":"基本操作 Mac 上安装 Nginx： 启用 Nginx（可修改此配置文件）： Mac 上 Log 文件地址： 停止nginx： 确认配置文件语法是否正确： 如果正确，会显示以下提示信息： 平滑重启： Error log path: http basic auth 1. 生成密码 2. 配置 Linux…","html":"<h2>基本操作</h2>\n<p>Mac 上安装 Nginx：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install nginx</code></pre></div>\n<p>启用 Nginx（可修改此配置文件）：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo nginx -c /usr/local/etc/nginx/nginx.conf</code></pre></div>\n<p>Mac 上 Log 文件地址：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/usr/local/var/log/nginx</code></pre></div>\n<p>停止nginx：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ps -ef | grep nginx\nkill -QUIT [主进程号]</code></pre></div>\n<p>确认配置文件语法是否正确：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo nginx -t -c /usr/local/etc/nginx/nginx.conf</code></pre></div>\n<p>如果正确，会显示以下提示信息：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx: the configuration file /usr/local/etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /usr/local/etc/nginx/nginx.conf test is successful</code></pre></div>\n<p>平滑重启：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo kill -HUP [主进程号]</code></pre></div>\n<p>Error log path:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/usr/local/var/log/nginx</code></pre></div>\n<h2>http basic auth</h2>\n<h3>1. 生成密码</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"your_username:<span class=\"token variable\"><span class=\"token variable\">$(</span>openssl <span class=\"token function\">passwd</span> -crypt your_password<span class=\"token variable\">)</span></span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> <span class=\"token operator\">>></span> conf/passwd</code></pre></div>\n<h3>2. 配置</h3>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">/</span>kibana<span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">auth_basic</span> <span class=\"token string\">\"closed site\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">auth_basic_user_file</span> conf<span class=\"token operator\">/</span>passwd<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">rewrite</span> <span class=\"token operator\">^</span><span class=\"token operator\">/</span>kibana<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span>$<span class=\"token number\">1</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token punctuation\">:</span><span class=\"token number\">5601</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">proxy_set_header</span> X<span class=\"token operator\">-</span>Forwarded<span class=\"token operator\">-</span>For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">proxy_set_header</span> X<span class=\"token operator\">-</span>Real<span class=\"token operator\">-</span>IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Linux 安装配置</h2>\n<p>配置时指定安装目录为<code class=\"language-text\">/usr/local/nginx</code>，且开启https 解析。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">./configure --prefix=/usr/local/nginx --with-http_ssl_module\nmake\nmake install</code></pre></div>\n<p>开启nginx：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">./nginx -c /usr/local/nginx/conf/my.conf</code></pre></div>\n<p>下面是目前服务器的一些配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">events</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">worker_connections</span>  <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">http</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">include</span>       mime<span class=\"token punctuation\">.</span><span class=\"token keyword\">types</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default_type</span>  application<span class=\"token operator\">/</span>octet<span class=\"token operator\">-</span>stream<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">sendfile</span>        on<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">keepalive_timeout</span>  <span class=\"token number\">65</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">listen</span>       <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">listen</span>       <span class=\"token number\">443</span> <span class=\"token keyword\">ssl</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">server_name</span>  localhost<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">ssl_certificate</span>      <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>pem<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">ssl_certificate_key</span>  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span>auto_deploy<span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8001</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  <span class=\"token operator\">/</span><span class=\"token number\">50</span>x<span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">location</span> <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token number\">50</span>x<span class=\"token punctuation\">.</span>html <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">root</span>   html<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>代理其他端口的webapp 如node</h2>\n<p>用户在访问网站时，请求先到 nginx 进行处理，如果是 node.js 站点的话，将请求转发到 node.js 的服务，然后再将 node.js 服务的结果返回给用户。</p>\n<p>在 nginx 中设置反向代理很简单，一句 <code class=\"language-text\">proxy_pass</code> 就可以搞定：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">server_name</span> example<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token punctuation\">:</span><span class=\"token number\">9000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果需要在某路径代理某端口，url 可以rewrite，但需要注意此端口的引用静态文件均要改为相对路径：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">listen</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">server_name</span> example<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span>app<span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">rewrite</span> <span class=\"token operator\">^</span><span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span>$<span class=\"token number\">1</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>配置PHP时踩的坑</h2>\n<p>从官网下载PHP 后，<code class=\"language-text\">./configure</code> 需要输入一大堆参数，指定安装的文件夹，安装<code class=\"language-text\">php-fpm</code> 等，然后才<code class=\"language-text\">make &amp; make install</code> 。</p>\n<h3>基本原理</h3>\n<p>nginx本身不能处理PHP，它只是个web服务器，当接收到请求后，如果是php请求，则发给php解释器处理，并把结果返回给客户端。nginx一般是把请求发fastcgi管理进程处理，fascgi管理进程选择cgi子进程处理结果并返回被nginx。</p>\n<p>且需要配置php-fpm：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#复制一份有效的配置文件\nsudo cp /usr/local/php/etc/php-fpm.conf.default.conf  php-fpm.conf\n\n#复制一份有效的用户配置文件，用户名是配置php的时候指定的\nsudo cp /usr/local/php/etc/php-fpm.d/www.conf.default www.conf\n\n#启动php-fpm，mac必须要以root用户启动，-R 参数表示 --allow-to-run-as-root\nsudo /usr/local/php/sbin/php-fpm -R\n\n#查看一下php-fpm是否启动成功\nps aux | grep php-fpm\n\n#查看9000端口是否已经listen\nnetstat -ant | grep 9000</code></pre></div>\n<p>然后还需要配置nginx， 文件地址<code class=\"language-text\">/usr/local/etc/nginx/nginx.conf</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">~</span> \\<span class=\"token punctuation\">.</span>php$ <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">root</span>           html<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">fastcgi_pass</span>   <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">9000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">fastcgi_index</span>  <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>php<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">fastcgi_param</span>  SCRIPT_FILENAME  <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>www<span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">include</span>        fastcgi_params<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面是最终的配置结果，其实中间经历了<code class=\"language-text\">nginx File not found</code> 的问题，结果解决办法在这个网址：<a href=\"https://stackoverflow.com/questions/17808787/file-not-found-when-running-php-with-nginx\">解决办法</a></p>\n<p>之后在<code class=\"language-text\">/usr/local/var/www/</code> 此文件夹中编辑一个最简单的php 文件即可检查是否配置成功。这个文件夹有个关于<code class=\"language-text\">html</code> 的链接，所以上面的<code class=\"language-text\">root</code> 选项配置的是<code class=\"language-text\">html</code>。</p>\n<h2>实现二级域名转发</h2>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">listen</span>       <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">server_name</span>  <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>abc<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$http_host</span> <span class=\"token operator\">~</span><span class=\"token operator\">*</span> <span class=\"token string\">\"^(.*?)\\.abc\\.com$\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    <span class=\"token comment\">#正则表达式</span>\n                <span class=\"token keyword\">set</span> <span class=\"token variable\">$domain</span> $<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">#设置变量</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$domain</span> <span class=\"token operator\">~</span><span class=\"token operator\">*</span> <span class=\"token string\">\"shop\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n               <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>abc<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">:</span><span class=\"token number\">3001</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">#域名中有shop，转发到3001端口</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$domain</span> <span class=\"token operator\">~</span><span class=\"token operator\">*</span> <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n               <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>abc<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">:</span><span class=\"token number\">3002</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">#域名中有mail，转发到3002端口</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">tcp_nodelay</span>     on<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">proxy_set_header</span> Host            <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">proxy_set_header</span> X<span class=\"token operator\">-</span>Real<span class=\"token operator\">-</span>IP       <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">proxy_set_header</span> X<span class=\"token operator\">-</span>Forwarded<span class=\"token operator\">-</span>For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">#以上三行，目的是将代理服务器收到的用户的信息传到真实服务器上</span>\n\n            <span class=\"token keyword\">root</span>   html<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">index</span>  <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>htm<span class=\"token punctuation\">;</span>            <span class=\"token comment\">#默认情况</span>\n        <span class=\"token punctuation\">}</span></code></pre></div>\n<h2>参考网址</h2>\n<ul>\n<li><a href=\"https://www.web-tinker.com/article/21202.html\">nginx 配置之 proxy_pass 神器！</a></li>\n<li><a href=\"http://seanlook.com/2015/05/17/nginx-location-rewrite/\">nginx配置location总结及rewrite规则写法</a></li>\n<li><a href=\"https://xuexb.com/post/nginx-url-rewrite.html\">nginx配置url重写</a></li>\n<li><a href=\"https://wizardforcel.gitbooks.io/nginx-doc/content/Text/6.5_nginx_php_fpm.html\">nginx php-fpm安装配置</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003067656\">nginx和php-fpm基础环境的安装和配置</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000002904436\">MAC下尝试PHP7 alpha版本的安装</a></li>\n<li><a href=\"http://youyusan.github.io/2016/01/30/php-nginx-in-mac/\">Mac下安装PHP开发环境</a></li>\n<li><a href=\"https://www.zybuluo.com/phper/note/72879\">php-fpm的安装和启动</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000004123048\">编译安装nginx1.9.7+php7.0.0服务器环境</a></li>\n<li><a href=\"https://blog.csdn.net/Metropolis_cn/article/details/73613022\">nginx实现二级域名转发</a></li>\n</ul>","frontmatter":{"title":"Nginx 学习笔记","date":"June 09, 2017","description":""}}},"pageContext":{"slug":"/20170610-nginx-notes/","previous":{"fields":{"slug":"/20170608-experien-of-wechat-web-api/","path":"/post/20170608-experien-of-wechat-web-api/"},"frontmatter":{"title":"微信网页开发验证及调用接口经验分享"}},"next":{"fields":{"slug":"/20170611-knowledge-of-session-and-express/","path":"/post/20170611-knowledge-of-session-and-express/"},"frontmatter":{"title":"session原理、node实现session与express实现session"}}}}}