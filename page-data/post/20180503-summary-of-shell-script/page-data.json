{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/20180503-summary-of-shell-script/","result":{"data":{"site":{"siteMetadata":{"title":"lqqyt2423's blog"}},"markdownRemark":{"id":"6af17ab2-fbd5-5e1c-8316-4727024b130c","excerpt":"…","html":"<p><code class=\"language-text\">read -p</code> 可以接受用户的输入</p>\n<p><code class=\"language-text\">echo -e</code> <code class=\"language-text\">-e</code> 设置可以在接下来的字符串中输入换行符等符号</p>\n<p><code class=\"language-text\">$(ls)</code> 此形式接受括号内命令的运行结果</p>\n<p><code class=\"language-text\">$((a * b))</code> 可在双括号内运行加减乘除</p>\n<h2>文件接收自定义参数：</h2>\n<ul>\n<li><code class=\"language-text\">${0}</code> 文件名</li>\n<li><code class=\"language-text\">${1}</code> 第一个参数</li>\n<li><code class=\"language-text\">${2}</code> 第二个参数</li>\n<li>…</li>\n<li><code class=\"language-text\">$#</code> 参数的个数</li>\n<li><code class=\"language-text\">$@</code> 所有参数</li>\n<li><code class=\"language-text\">shift</code> 参数索引偏离</li>\n</ul>\n<h2>条件判断</h2>\n<h3><code class=\"language-text\">test</code> 可进行条件判断</h3>\n<ul>\n<li><code class=\"language-text\">test -e filename</code> 判断文件是否存在</li>\n<li><code class=\"language-text\">test -f filename</code> 判断是否为文件</li>\n<li><code class=\"language-text\">test -d filename</code> 判断是否为文件夹</li>\n<li>…</li>\n</ul>\n<p><code class=\"language-text\">[ a == b ]</code> 此为判断符号</p>\n<h3>if条件判断式：</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> 条件判断 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  code\n<span class=\"token keyword\">fi</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> 条件判断 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  code\n<span class=\"token keyword\">else</span>\n  code\n<span class=\"token keyword\">fi</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> 条件判断 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  code\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> 条件判断 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  code\n<span class=\"token keyword\">else</span>\n  code\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h3>case条件判断</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">case</span> <span class=\"token variable\">${1}</span> <span class=\"token keyword\">in</span>\n  <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello\"</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"null\"</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  *<span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"anything else\"</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">esac</span></code></pre></div>\n<h2>function功能</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">fnname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  code\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">function</code> 代码段需放在调用此代码的前面。</p>\n<h2>循环功能</h2>\n<h3>while do</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> condition <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n  code\n<span class=\"token keyword\">done</span></code></pre></div>\n<h3>until do</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">until</span> <span class=\"token punctuation\">[</span> condition <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n  code\n<span class=\"token keyword\">done</span></code></pre></div>\n<h3>for in</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">var</span> <span class=\"token keyword\">in</span> a b c\n<span class=\"token keyword\">do</span>\n  code\n<span class=\"token keyword\">done</span></code></pre></div>\n<h3>for 表达式</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">do</span>\n  code\n<span class=\"token keyword\">done</span></code></pre></div>","frontmatter":{"title":"shell script 知识点总结","date":"May 02, 2018","description":""}}},"pageContext":{"slug":"/20180503-summary-of-shell-script/","previous":{"fields":{"slug":"/20180407-way-to-support-excel-could-open-csv-correctly/","path":"/post/20180407-way-to-support-excel-could-open-csv-correctly/"},"frontmatter":{"title":"让Excel 支持打开CSV 不乱码"}},"next":{"fields":{"slug":"/20180510-practice-of-handle-html-by-regexp/","path":"/post/20180510-practice-of-handle-html-by-regexp/"},"frontmatter":{"title":"用正则表达式处理html的实践"}}}}}