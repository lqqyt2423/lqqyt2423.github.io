{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/20170611-knowledge-of-session-and-express/","result":{"data":{"site":{"siteMetadata":{"title":"lqqyt2423's blog"}},"markdownRemark":{"id":"c762b551-665b-58b5-87c8-3ffe22d2e369","excerpt":"原理 session 存在的意义，是为了解决HTTP 是与状态协议所带来的问题。但是服务端和客户端可以通过cookie 来进行交互，session 的原理便是将sessionid 存储在客户端的cookie 中，然后客户端每次请求HTTP 时，便会发送cookie，然后服务端通过sessionid…","html":"<h2>原理</h2>\n<p>session 存在的意义，是为了解决HTTP 是与状态协议所带来的问题。但是服务端和客户端可以通过cookie 来进行交互，session 的原理便是将session<em>id 存储在客户端的cookie 中，然后客户端每次请求HTTP 时，便会发送cookie，然后服务端通过session</em>id 便可将数据关联起来。</p>\n<h2>node 原生代码实现逻辑</h2>\n<ol>\n<li>用户访问网页时，如果cookie 中不存在session_id 字段，则处于没有登录的状态</li>\n<li>客户输入用户名和密码登录之后，如果服务端验证成功，则会随机生成一串字符串作为键，值中保留用户名，存在内存中</li>\n<li>然后服务端通过<code class=\"language-text\">set-cookie</code> 将session_id 通过cookie 保存在客户端中，如有需要，可以配置过期时间参数</li>\n<li>客户端之后访问中，便会将cookie 通过首部传入服务端中，服务端通过识别判断出客户端是处于登录状态，便返回对应登录的信息</li>\n<li>如果客户端选择注销登录，那传入服务端后，服务端便删除存储在全局对象的中此键</li>\n</ol>\n<h2>简要代码</h2>\n<p>服务端登录之后生成session_id：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> sessions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oUser<span class=\"token punctuation\">.</span>user <span class=\"token keyword\">in</span> users <span class=\"token operator\">&amp;&amp;</span> oUser<span class=\"token punctuation\">.</span>password <span class=\"token operator\">==</span> users<span class=\"token punctuation\">[</span>oUser<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> sessionId <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tres<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'set-cookie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sessionId='</span> <span class=\"token operator\">+</span> sessionId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sessionId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsessions<span class=\"token punctuation\">[</span>sessionId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> oUser<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">;</span>\n\tres<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success\\n'</span> <span class=\"token operator\">+</span> oUser<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\tres<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wrong!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>请求之后，首先可以检查session<em>id，如果存在，将session</em>id 添加为request 的一个属性，相当于express 中的一个中间件：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> cookie <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> sessionId <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/sessionId=[a-z0-9]{16}/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tsessionId <span class=\"token operator\">=</span> <span class=\"token regex\">/sessionId=([a-z0-9]{16})/</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessionId <span class=\"token keyword\">in</span> sessions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\treq<span class=\"token punctuation\">.</span>sessionId <span class=\"token operator\">=</span> sessionId<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面代码就将session<em>id 与username 绑定在一起了，客户端通过session</em>id 便可识别用户。</p>\n<h2>express 实现session</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> session <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express-session'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> morgan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'morgan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dev'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\tsecret<span class=\"token operator\">:</span> <span class=\"token string\">'random string'</span><span class=\"token punctuation\">,</span>\n\tcookie<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> maxAge<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>isVisit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\treq<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>isVisit<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'第'</span> <span class=\"token operator\">+</span> req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>isVisit <span class=\"token operator\">+</span> <span class=\"token string\">'次访问'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\treq<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>isVisit <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\tres<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'第1次访问'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// console.log(req.session);</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>参考网址</h2>\n<ul>\n<li><a href=\"https://www.pureweber.com/article/how-session-works/\">Session原理简述</a></li>\n<li><a href=\"http://www.5941740.cn/2016/06/08/node-authority/index.html\">Nodejs使用session、cookie进行登录验证功能的实现</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000002630691\">Session原理、安全以及最基本的Express和Redis实现</a></li>\n<li><a href=\"http://wiki.jikexueyuan.com/project/node-lessons/cookie-session.html\">cookie 和 session</a></li>\n<li><a href=\"https://github.com/expressjs/session\">expressjs/session 文档</a></li>\n</ul>","frontmatter":{"title":"session原理、node实现session与express实现session","date":"June 10, 2017","description":""}}},"pageContext":{"slug":"/20170611-knowledge-of-session-and-express/","previous":{"fields":{"slug":"/20170610-nginx-notes/","path":"/post/20170610-nginx-notes/"},"frontmatter":{"title":"Nginx 学习笔记"}},"next":{"fields":{"slug":"/20170623-achieve-translate-cli-by-nodejs/","path":"/post/20170623-achieve-translate-cli-by-nodejs/"},"frontmatter":{"title":"node命令行程序开发之实现中英翻译功能"}}}}}